@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Exercise03 - Database Data Entry");

    var title = "";
    var artistId = "0";
    var releaseYear = "";
    var releaseLabel = "";

    var db = Database.Open("ChinookDB");
    var artistQuery = @"select ArtistId, Name
from Artists
order by Name";

    var artistRecords = db.Query(artistQuery);

    List<SelectListItem> artistList = new List<SelectListItem>();
    artistList.Add(new SelectListItem
    {
        Value = "0",
        Text = "select..."
    });

    foreach (var record in artistRecords)
    {
        artistList.Add(new SelectListItem
        {
            Value = record.ArtistId.ToString(),
            Text = record.Name
        });
    }


    Validation.Add("TitleName",
                    Validator.Required("Title is required."),
                    Validator.StringLength(160, 0, "Title name is limited to 160 characters."));
    Validation.Add("ArtistList",
                    Validator.Range(1, artistList.Count(), "You must select an Artist name"));
    Validation.Add("ReleaseYear",
                    Validator.Required("Year is required."),
                    Validator.Integer("Year must be a number"),
                    Validator.Range(1950, DateTime.Today.Year, $"Year must be between 1950 and {DateTime.Today.Year}."));
    Validation.Add("ReleaseLabel",
                    Validator.Required("Label is required."),
                    Validator.StringLength(150, 0, "Label is limited to 150 characters."));
}

@section head{
    <link href="~/Content/CssCopy.css" rel="stylesheet" />
}

@section banner {
    <h1>@Page.Title</h1>
}


@if (IsPost)
{
    title = Request.Form["TitleName"];
    artistId = Request.Form["ArtistList"];
    releaseYear = Request.Form["ReleaseYear"];
    releaseLabel = Request.Form["ReleaseLabel"];
    var theButton = Request.Form["FormButton"];

    if (theButton.Equals("Clear"))
    {
        title = "";
        artistId = "0";
        releaseYear = "";
        releaseLabel = "";
    }
    else
    {
        if (Validation.IsValid())
        {
            try
            {
                var insertAlbumCommand = @"insert into Albums (Title, ArtistId, ReleaseYear, ReleaseLabel)
                                values (@0,@1,@2,@3)";
                db.Execute(insertAlbumCommand, title,
                    artistId.Equals("0") ? null : artistId,
                    string.IsNullOrEmpty(releaseYear) ? null : releaseYear,
                    string.IsNullOrEmpty(releaseLabel) ? null : releaseLabel); //insert arguments.
                <div class="col-12 text-center">
                    <p style="color:green">
                        Album has been added.
                    </p>
                </div>
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size: large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
}

<fieldset>
    <legend class="row offset-1">Enter Album</legend>
    <div class="row row-cols-2 offset-1">
        @Html.ValidationSummary()
    </div>
    <br />
    <form id="theform" method="post">
        <div class="row offset-1">
            <label class="label" for="TitleName">Title:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("TitleName", title)</span>
            @Html.ValidationMessage("TitleName")
        </div>
        <div class="row offset-1">
            <label class="label" for="ArtistList">Supplier:</label>&nbsp;&nbsp;
            <span>@Html.DropDownList("ArtistList", artistList)</span>
            @Html.ValidationMessage("ArtistList")
        </div>
        <div class="row offset-1">
            <label class="label" for="ReleaseYear">Year:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("ReleaseYear", releaseYear)</span>
            @Html.ValidationMessage("ReleaseYear")
        </div>
        <div class="row offset-1">
            <label class="label" for="ReleaseLabel">Label:</label>&nbsp;&nbsp;
            <span>@Html.TextBox("ReleaseLabel", releaseYear)</span>
            @Html.ValidationMessage("ReleaseLabel")
        </div>
        <div class="row offset-1">
            <button type="submit" id="FormButton" name="FormButton"
                    class="btn btn-primary" value="Add">
                Add
            </button>
            <button type="submit" id="FormButton" name="FormButton" formnovalidate
                    class="btn" value="Clear">
                Clear
            </button>
        </div>
    </form>
</fieldset>


