@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Exercise03 - Database Data Entry");

    var db = Database.Open("ChinookDB");
    var artistQuery = @"select ArtistId, Name
                from Artists
                order by Name";

    var title = "";
    var artistId = "0";
    var releaseYear = "";
    var releaseLabel = "";

    var artistList = db.Query(artistQuery);



    Validation.Add("Title",
                    Validator.Required("Title name is required."),
                    Validator.StringLength(160,1, "Title name is limited to 160 characters."));
    Validation.Add("ArtistId",
                    Validator.Required("Artist name is required."));
    Validation.Add("ReleaseYear",
                    Validator.Required("Release Year is required."),
                    Validator.Integer("Release Year must be a number"),
                    Validator.Range(1950,DateTime.Today.Year, $"Release Year must be between 1950 and {DateTime.Today.Year}."));
    Validation.Add("ReleaseLabel",
                    Validator.Required("Release Label is required."),
                    Validator.StringLength(150,1,"Release Label is limited to 150 characters."));
}

@section banner {
    <h1>@Page.Title</h1>
}
@if(IsPost)
{
    title = Request.Form["TitleName"];
    artistId = Request.Form["ArtistList"];
    releaseYear = Request.Form["ReleaseYear"];
    releaseLabel = Request.Form["ReleaseLabel"];
    var theButton = Request.Form["FormButton"];

    if (theButton.Equals("Clear"))
    {
        title = "";
        artistId = "0";
        releaseYear = "";
        releaseLabel = "";
    }
    else
    {
        if(Validation.IsValid())
        {
            var valid = true;
            if(artistId.Equals("0"))
            {
                valid = false;
                <div class="col-md-12 text-center">
                    <p style="color:firebrick">
                        You must select an artist name
                    </p>
                </div>
            }
            if (valid)
            {
                try
                {
                    var insertAlbumCommand = @"insert into Albums (Title, ArtistId, ReleaseYear, ReleaseLabel)
                                             values (@0,@1,@2,@3)";
                    db.Execute(insertAlbumCommand); //insert arguments.
                    <div class="col-12 text-center">
                        <p style="color:green">
                            Album has been added
                        </p>
                    </div>
                }
                catch (Exception ex)
                {
                    <div class="col-12 text-center">
                        <p style="color:firebrick; font-size: large">
                            Processing error: @ex.Message
                        </p>
                    </div>
                }
            }
        }
    }
}


    @Html.ValidationSummary();
<form id="theform" method="post">
    <div class="row">
        <div class="col-md-6 text-right">

            <label for="ProductName">Product Name:</label><br />
            <label for="SupplierID">Supplier:</label><br />
            <label for="CategoryID">Catgeory:</label><br />
            <label for="QuantityPerUnit">Qty/Unit:</label><br />
            <label for="UnitPrice">Price:</label><br />
            <label for="UnitsInStock">QoH:</label><br />
            <label for="UnitsOnOrder">QoO:</label><br />
            <label for="ReorderLevel">RoL:</label><br />
            <br />
        </div>
        <div class="col-me-6 text-left">

            <input type="text" value="@productname"
                   id="ProductName" name="ProductName" required />
            @* using ValidationMessage("controlname") *@
            @Html.ValidationMessage("ProductName")
            <br />
            <select id="SupplierList" name="SupplierList">
                <option value="0">select supplier...</option>
                @foreach (var item in supplierlist)
                {
                    //for the select control, the default display on an event
                    //   is the 1st option tag
                    //to retain the option selected between posts, you need to
                    //   set the selected option using the attribute selected
                    if (supplierid == item.SupplierID.ToString())
                    {
                        <option value="@item.SupplierID" selected>@item.CompanyName</option>
                    }
                    else
                    {
                        <option value="@item.SupplierID">@item.CompanyName</option>
                    }

                }
            </select>
            <br />
            <select id="CategoryList" name="CategoryList">
                <option value="0">select category...</option>
                @foreach (var item in categorylist)
                {
                    if (categoryid == item.CategoryID.ToString())
                    {
                        <option value="@item.CategoryID" selected>@item.CategoryName</option>
                    }
                    else
                    {
                        <option value="@item.CategoryID">@item.CategoryName</option>
                    }
                }
            </select>
            <br />
            <input type="text" id="QuantityPerUnit" name="QuantityPerUnit"
                   value="@quantityperunit" /><br />
            <input type="number" id="UnitPrice" name="UnitPrice"
                   value="@unitprice" min="0.00" max="9999999.0" step="0.01" /><br />
            <input type="text" id="UnitsInStock" name="UnitsInStock"
                   value="@unitsinstock" /><br />
            <input type="text" id="UnitsOnOrder" name="UnitsOnOrder"
                   value="@unitsonorder" /><br />
            <input type="text" id="ReorderLevel" name="ReorderLevel"
                   value="@reorderlevel" /><br />
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-center">
            <button type="submit" id="FormButton" name="FormButton"
                    class="btn btn-primary" value="Add">
                Add
            </button>
            <button type="submit" id="FormButton" name="FormButton" formnovalidate
                    class="btn" value="Clear">
                Clear
            </button>
        </div>
    </div>
</form>
